// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0--rc1
// source: analyzer/analyzer.proto

package analyzer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnalyzeRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ClientIP      string                      `protobuf:"bytes,1,opt,name=clientIP,proto3" json:"clientIP,omitempty"`
	ClientPort    string                      `protobuf:"bytes,2,opt,name=clientPort,proto3" json:"clientPort,omitempty"`
	ServerIP      string                      `protobuf:"bytes,3,opt,name=serverIP,proto3" json:"serverIP,omitempty"`
	ServerPort    string                      `protobuf:"bytes,4,opt,name=serverPort,proto3" json:"serverPort,omitempty"`
	URI           string                      `protobuf:"bytes,5,opt,name=URI,proto3" json:"URI,omitempty"`
	Method        string                      `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"`
	Proto         string                      `protobuf:"bytes,7,opt,name=proto,proto3" json:"proto,omitempty"`
	Headers       []*AnalyzeRequest_HTTPParam `protobuf:"bytes,8,rep,name=headers,proto3" json:"headers,omitempty"`
	QueryParams   []*AnalyzeRequest_HTTPParam `protobuf:"bytes,9,rep,name=queryParams,proto3" json:"queryParams,omitempty"`
	BodyParams    []*AnalyzeRequest_HTTPParam `protobuf:"bytes,10,rep,name=bodyParams,proto3" json:"bodyParams,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeRequest) Reset() {
	*x = AnalyzeRequest{}
	mi := &file_analyzer_analyzer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeRequest) ProtoMessage() {}

func (x *AnalyzeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analyzer_analyzer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeRequest) Descriptor() ([]byte, []int) {
	return file_analyzer_analyzer_proto_rawDescGZIP(), []int{0}
}

func (x *AnalyzeRequest) GetClientIP() string {
	if x != nil {
		return x.ClientIP
	}
	return ""
}

func (x *AnalyzeRequest) GetClientPort() string {
	if x != nil {
		return x.ClientPort
	}
	return ""
}

func (x *AnalyzeRequest) GetServerIP() string {
	if x != nil {
		return x.ServerIP
	}
	return ""
}

func (x *AnalyzeRequest) GetServerPort() string {
	if x != nil {
		return x.ServerPort
	}
	return ""
}

func (x *AnalyzeRequest) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *AnalyzeRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *AnalyzeRequest) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *AnalyzeRequest) GetHeaders() []*AnalyzeRequest_HTTPParam {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *AnalyzeRequest) GetQueryParams() []*AnalyzeRequest_HTTPParam {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

func (x *AnalyzeRequest) GetBodyParams() []*AnalyzeRequest_HTTPParam {
	if x != nil {
		return x.BodyParams
	}
	return nil
}

type AnalyzeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAttack      bool                   `protobuf:"varint,1,opt,name=is_attack,json=isAttack,proto3" json:"is_attack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeResponse) Reset() {
	*x = AnalyzeResponse{}
	mi := &file_analyzer_analyzer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse) ProtoMessage() {}

func (x *AnalyzeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analyzer_analyzer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse) Descriptor() ([]byte, []int) {
	return file_analyzer_analyzer_proto_rawDescGZIP(), []int{1}
}

func (x *AnalyzeResponse) GetIsAttack() bool {
	if x != nil {
		return x.IsAttack
	}
	return false
}

type AnalyzeRequest_HTTPParam struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeRequest_HTTPParam) Reset() {
	*x = AnalyzeRequest_HTTPParam{}
	mi := &file_analyzer_analyzer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeRequest_HTTPParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeRequest_HTTPParam) ProtoMessage() {}

func (x *AnalyzeRequest_HTTPParam) ProtoReflect() protoreflect.Message {
	mi := &file_analyzer_analyzer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeRequest_HTTPParam.ProtoReflect.Descriptor instead.
func (*AnalyzeRequest_HTTPParam) Descriptor() ([]byte, []int) {
	return file_analyzer_analyzer_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AnalyzeRequest_HTTPParam) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AnalyzeRequest_HTTPParam) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_analyzer_analyzer_proto protoreflect.FileDescriptor

var file_analyzer_analyzer_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x72, 0x22, 0xc5, 0x03, 0x0a, 0x0e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x50, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x50, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x52, 0x49, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x49,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3c,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0b,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2e, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x54, 0x54, 0x50,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x62, 0x6f, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65,
	0x72, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x48, 0x54, 0x54, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0a, 0x62, 0x6f, 0x64, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x33, 0x0a, 0x09, 0x48, 0x54, 0x54, 0x50, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0f, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x32, 0x4a, 0x0a, 0x08, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2e, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x6f, 0x73, 0x65, 0x34, 0x37, 0x2f, 0x77, 0x61,
	0x66, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_analyzer_analyzer_proto_rawDescOnce sync.Once
	file_analyzer_analyzer_proto_rawDescData []byte
)

func file_analyzer_analyzer_proto_rawDescGZIP() []byte {
	file_analyzer_analyzer_proto_rawDescOnce.Do(func() {
		file_analyzer_analyzer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_analyzer_analyzer_proto_rawDesc), len(file_analyzer_analyzer_proto_rawDesc)))
	})
	return file_analyzer_analyzer_proto_rawDescData
}

var file_analyzer_analyzer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_analyzer_analyzer_proto_goTypes = []any{
	(*AnalyzeRequest)(nil),           // 0: analyzer.AnalyzeRequest
	(*AnalyzeResponse)(nil),          // 1: analyzer.AnalyzeResponse
	(*AnalyzeRequest_HTTPParam)(nil), // 2: analyzer.AnalyzeRequest.HTTPParam
}
var file_analyzer_analyzer_proto_depIdxs = []int32{
	2, // 0: analyzer.AnalyzeRequest.headers:type_name -> analyzer.AnalyzeRequest.HTTPParam
	2, // 1: analyzer.AnalyzeRequest.queryParams:type_name -> analyzer.AnalyzeRequest.HTTPParam
	2, // 2: analyzer.AnalyzeRequest.bodyParams:type_name -> analyzer.AnalyzeRequest.HTTPParam
	0, // 3: analyzer.Analyzer.Analyze:input_type -> analyzer.AnalyzeRequest
	1, // 4: analyzer.Analyzer.Analyze:output_type -> analyzer.AnalyzeResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_analyzer_analyzer_proto_init() }
func file_analyzer_analyzer_proto_init() {
	if File_analyzer_analyzer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_analyzer_analyzer_proto_rawDesc), len(file_analyzer_analyzer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_analyzer_analyzer_proto_goTypes,
		DependencyIndexes: file_analyzer_analyzer_proto_depIdxs,
		MessageInfos:      file_analyzer_analyzer_proto_msgTypes,
	}.Build()
	File_analyzer_analyzer_proto = out.File
	file_analyzer_analyzer_proto_goTypes = nil
	file_analyzer_analyzer_proto_depIdxs = nil
}
