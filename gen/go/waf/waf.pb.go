// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0--rc1
// source: waf/waf.proto

package waf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnalyzeRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp      `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientIp      string                      `protobuf:"bytes,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	ClientPort    string                      `protobuf:"bytes,3,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`
	ServerIp      string                      `protobuf:"bytes,4,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	ServerPort    string                      `protobuf:"bytes,5,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`
	Uri           string                      `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
	Method        string                      `protobuf:"bytes,7,opt,name=method,proto3" json:"method,omitempty"`
	Proto         string                      `protobuf:"bytes,8,opt,name=proto,proto3" json:"proto,omitempty"`
	Headers       []*AnalyzeRequest_HTTPParam `protobuf:"bytes,9,rep,name=headers,proto3" json:"headers,omitempty"`
	QueryParams   []*AnalyzeRequest_HTTPParam `protobuf:"bytes,10,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty"`
	BodyParams    []*AnalyzeRequest_HTTPParam `protobuf:"bytes,11,rep,name=body_params,json=bodyParams,proto3" json:"body_params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeRequest) Reset() {
	*x = AnalyzeRequest{}
	mi := &file_waf_waf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeRequest) ProtoMessage() {}

func (x *AnalyzeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_waf_waf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeRequest) Descriptor() ([]byte, []int) {
	return file_waf_waf_proto_rawDescGZIP(), []int{0}
}

func (x *AnalyzeRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AnalyzeRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *AnalyzeRequest) GetClientPort() string {
	if x != nil {
		return x.ClientPort
	}
	return ""
}

func (x *AnalyzeRequest) GetServerIp() string {
	if x != nil {
		return x.ServerIp
	}
	return ""
}

func (x *AnalyzeRequest) GetServerPort() string {
	if x != nil {
		return x.ServerPort
	}
	return ""
}

func (x *AnalyzeRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *AnalyzeRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *AnalyzeRequest) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *AnalyzeRequest) GetHeaders() []*AnalyzeRequest_HTTPParam {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *AnalyzeRequest) GetQueryParams() []*AnalyzeRequest_HTTPParam {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

func (x *AnalyzeRequest) GetBodyParams() []*AnalyzeRequest_HTTPParam {
	if x != nil {
		return x.BodyParams
	}
	return nil
}

type AnalyzeResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AttackProbability float32                `protobuf:"fixed32,1,opt,name=attack_probability,json=attackProbability,proto3" json:"attack_probability,omitempty"` // probability that request contains attack (ranges from 0 to 1)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AnalyzeResponse) Reset() {
	*x = AnalyzeResponse{}
	mi := &file_waf_waf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse) ProtoMessage() {}

func (x *AnalyzeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_waf_waf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse) Descriptor() ([]byte, []int) {
	return file_waf_waf_proto_rawDescGZIP(), []int{1}
}

func (x *AnalyzeResponse) GetAttackProbability() float32 {
	if x != nil {
		return x.AttackProbability
	}
	return 0
}

type AnalyzeRequest_HTTPParam struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeRequest_HTTPParam) Reset() {
	*x = AnalyzeRequest_HTTPParam{}
	mi := &file_waf_waf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeRequest_HTTPParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeRequest_HTTPParam) ProtoMessage() {}

func (x *AnalyzeRequest_HTTPParam) ProtoReflect() protoreflect.Message {
	mi := &file_waf_waf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeRequest_HTTPParam.ProtoReflect.Descriptor instead.
func (*AnalyzeRequest_HTTPParam) Descriptor() ([]byte, []int) {
	return file_waf_waf_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AnalyzeRequest_HTTPParam) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AnalyzeRequest_HTTPParam) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_waf_waf_proto protoreflect.FileDescriptor

var file_waf_waf_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x77, 0x61, 0x66, 0x2f, 0x77, 0x61, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x77, 0x61, 0x66, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x03, 0x0a, 0x0e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x37,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x77, 0x61, 0x66, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x77, 0x61, 0x66, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0b, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x62, 0x6f, 0x64,
	0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x77, 0x61, 0x66, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0a, 0x62,
	0x6f, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x33, 0x0a, 0x09, 0x48, 0x54, 0x54,
	0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40,
	0x0a, 0x0f, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x62,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x32, 0x3b, 0x0a, 0x03, 0x57, 0x41, 0x46, 0x12, 0x34, 0x0a, 0x07, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x12, 0x13, 0x2e, 0x77, 0x61, 0x66, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x77, 0x61, 0x66, 0x2e, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x24, 0x5a,
	0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x6f, 0x73,
	0x65, 0x34, 0x37, 0x2f, 0x77, 0x61, 0x66, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x77, 0x61, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_waf_waf_proto_rawDescOnce sync.Once
	file_waf_waf_proto_rawDescData []byte
)

func file_waf_waf_proto_rawDescGZIP() []byte {
	file_waf_waf_proto_rawDescOnce.Do(func() {
		file_waf_waf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_waf_waf_proto_rawDesc), len(file_waf_waf_proto_rawDesc)))
	})
	return file_waf_waf_proto_rawDescData
}

var file_waf_waf_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_waf_waf_proto_goTypes = []any{
	(*AnalyzeRequest)(nil),           // 0: waf.AnalyzeRequest
	(*AnalyzeResponse)(nil),          // 1: waf.AnalyzeResponse
	(*AnalyzeRequest_HTTPParam)(nil), // 2: waf.AnalyzeRequest.HTTPParam
	(*timestamppb.Timestamp)(nil),    // 3: google.protobuf.Timestamp
}
var file_waf_waf_proto_depIdxs = []int32{
	3, // 0: waf.AnalyzeRequest.timestamp:type_name -> google.protobuf.Timestamp
	2, // 1: waf.AnalyzeRequest.headers:type_name -> waf.AnalyzeRequest.HTTPParam
	2, // 2: waf.AnalyzeRequest.query_params:type_name -> waf.AnalyzeRequest.HTTPParam
	2, // 3: waf.AnalyzeRequest.body_params:type_name -> waf.AnalyzeRequest.HTTPParam
	0, // 4: waf.WAF.Analyze:input_type -> waf.AnalyzeRequest
	1, // 5: waf.WAF.Analyze:output_type -> waf.AnalyzeResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_waf_waf_proto_init() }
func file_waf_waf_proto_init() {
	if File_waf_waf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_waf_waf_proto_rawDesc), len(file_waf_waf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_waf_waf_proto_goTypes,
		DependencyIndexes: file_waf_waf_proto_depIdxs,
		MessageInfos:      file_waf_waf_proto_msgTypes,
	}.Build()
	File_waf_waf_proto = out.File
	file_waf_waf_proto_goTypes = nil
	file_waf_waf_proto_depIdxs = nil
}
